# -*- coding: utf-8 -*-
"""
Created on Sun Feb 16 13:29:34 2020

@author: fparr
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint
import math
from matplotlib import animation
from matplotlib.patches import ConnectionPatch

def Mv_Resortes(X, t):
    #Constantes
    escala = 3 #Escala (0-6)
    fin = 10 #Constante fin m
    m1 = 25 #Vehiculo 1
    m2 = 15  #Vehiculo 2
    beta = 0.5 #Coeficiente de friccion
    k1 = 200 #Constante elastica 1
    k2 = 200 #Constante elastica 2
    #Longitudes:
    l1 = 15 #Resorte 1 
    l2 = 15 #Resorte 2
    
    # C(t) Movimiento cosenoidal. (se multiplica por una escala para aumentar su tamaño)
    C = escala * math.cos(2*t)

    #Fin del movimiento
    if(t >= fin):
       C = 0
       
    #Definimos el vector
    x1,x2, dx1, dx2 = X

    d1 = np.sqrt((x1-C)**2)
    d2 = np.sqrt((x2-x1)*(x2-x1))
    
    #ED´s
    d2x1 = -(beta*dx1)/m1 - (k1*(d1 - l1)*(C-x1)/d1)/m1 + (k2*(d2 - l2)*(x2-x1)/d2)/m1
    d2x2 = -(beta*dx2)/m2 + (k2*(d2 - l2)*(x1-x2)/d2)/m2

    return [dx1,dx2,d2x1,d2x2]

t = np.linspace(0,10,1000)

Y = odeint(Mv_Resortes, [1, 0, 10, 0], t)

plt.xlabel('Tiempo')
plt.ylabel('X')

plt.plot(t,Y[:,0])
plt.plot(t,Y[:,1])
plt.legend(['Vehiculo 1','Vehiculo 2'])

fig = plt.figure()
ax = plt.axes(xlim=(-60, 120), ylim=(0, 10))
carrito1 = plt.Rectangle((10,3), 2, 2, color="blue",fill=True)
carrito2 = plt.Rectangle((40,3), 2, 2, color="orange",fill=True)
circle = plt.Circle((0,3), 0.5,color='red')
line1 = plt.Arrow(0,4,10,0, width=0.2,color="black", hatch='o')
line2 = plt.Arrow(20,4,10,0, width=0.2,color="black", hatch='o')

def init():
    carrito1.xy = (10, 3)
    carrito2.xy = (30, 3)
    circle.center = (0,4)

    ax.add_patch(carrito1)
    ax.add_patch(carrito2)
    ax.add_patch(circle)
    ax.add_patch(line1)
    ax.add_patch(line2)
    return [carrito1, carrito2, circle, line1, line2]

def animate(i):
    x1, y = carrito1.xy
    x1 = Y[i][0] + 20
    carrito1.xy = (x1, y)
    
    x2, y = carrito2.xy
    x2 = Y[i][2] + 40
    carrito2.xy = (x2, y)

    cx, cy = circle.center
    cx = math.cos((i+90)/180)*2
    circle.center = (cx,cy)

    line1 = plt.Arrow(cx, 4, x1 - cx, 0, width=0.2, color="green", hatch='o')
    ax.add_patch(line1)
   
    
    line2 = plt.Arrow(x1+3, 4, (x2 - (x1+3)), 0, width=0.2, color="green", hatch='o')
    ax.add_patch(line2)
    
    return [carrito1,carrito2, circle, line1, line2]

anim = animation.FuncAnimation(fig, animate, init_func=init, frames=  1799, interval=1, blit=True)
